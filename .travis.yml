language: c

matrix:
  include:
      # OSX
      - os: osx
        name: "MacOS Catalina"
        osx_image: xcode12

      # WSL
      - os: windows
        name: "WSL"
        env:
          - WSL_INSTALL=1
          - USE_CONDA=0

      # Windows
      - os: windows
        name: "Windows"
        env:
          - WSL_INSTALL=0

      # Linux
      - os: linux
        dist: bionic
        name: "Ubuntu Bionic"
        env:
          - USE_CONDA=1
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - xvfb

      - os: linux
        dist: focal
        name: "Ubuntu focal"
        env:
          - NEURON_VERSION=7.7
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - xvfb

before_install:
  - |
    # Step 0: set common environment variables

    set -e
    export TRAVIS_TESTING=1
    export DISPLAY=:0
    export LOGFILE="hnn_travis.log"
    export PATH="$PATH:$HOME/.local/bin"

    if [[ "${WSL_INSTALL}" -eq 1 ]]; then
      # for sharing with WSL environment
      export OMPI_MCA_btl_vader_single_copy_mechanism=none
      export WSLENV=TRAVIS_TESTING/u:DISPLAY/u:OMPI_MCA_btl_vader_single_copy_mechanism/u:WSL_INSTALL/u
    fi
  - |
    # Step 1: install prerequisites

    if [[ "${WSL_INSTALL}" -eq 1 ]]; then
      echo "Installing WSL prerequisites"
      scripts/setup-travis-wsl.sh
    else
      echo "Installing ${TRAVIS_OS_NAME} prerequisites"
      scripts/setup-travis-${TRAVIS_OS_NAME}.sh

      source "$HOME/Miniconda3/etc/profile.d/conda.sh"
      conda activate hnn
    fi

install:
  - |
    # Step 2: install hnn Python module and modules for testing

    if [[ "${WSL_INSTALL}" -ne 1 ]]; then
      pip install flake8 pytest pytest-cov coverage coveralls mne pytest-qt
      python setup.py install
    else
      wsl -- pip install flake8 pytest pytest-cov coverage coveralls mne \
                 pytest-qt
      wsl -- python3 setup.py install --user
    fi

script:
  - |
    # Step 3: run CI tests with py.test

    if [[ "${WSL_INSTALL}" -eq 1 ]]; then
      # use helper commands from docker_functions.sh and utils.sh
      # script_fail prints out the log before quitting so we can troubleshoot
      source "scripts/docker_functions.sh"
      set_globals
      source scripts/utils.sh
      export -f cleanup

      # for X server DLLs
      export PATH=$PATH:/c/Program\ Files/VcXsrv

      # find_command_suggested_path "vcxsrv" "/c/Program Files/VcXsrv"
      # start_vcxsrv_print || script_fail
      which vcxsrv
      vcxsrv.exe -wgl -multiwindow
      wsl -- //home/hnn_user/hnn/scripts/run-pytest.sh
      # stop_vcxsrv || script_fail
    else
      if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        # NEURON will fail to import if DISPLAY is set
        unset DISPLAY
      elif [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
        # Python will search path to find neuron dll's
        export PATH=$PATH:/c/nrn/bin

        # run tests first as a user with a space (TODO)
        # runas //user:"test user" //wait "bash" "scripts/run-pytest.sh" < "$HOME/test_user_creds"
        # echo "Finished test with 'test user'"
      fi

      scripts/run-pytest.sh
    fi

after_success:
  - bash <(curl -s https://codecov.io/bash)
